{{- range $name, $tenant := .Values.tenants }}
{{- $tenantConfig := $tenant | default dict -}}
{{- $secret := $tenantConfig.secret | default dict -}}
{{- if (($secret.vault).enabled) | default false -}}
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: vault-backend-kubernetes
  namespace: tenant4a
spec:
  provider:
    vault:
      server: "http://40.69.97.49:8200"
      path: "new-way"
      version: "v1"
      auth:
        # Authenticate against Vault using a Kubernetes ServiceAccount
        # token stored in a Secret.
        # https://www.vaultproject.io/docs/auth/kubernetes
        kubernetes:
          # Path where the Kubernetes authentication backend is mounted in Vault
          mountPath: "kubernetes"
          # A required field containing the Vault Role to assume.
          role: "eso-tenant4a"
          # Optional service account field containing the name
          # of a kubernetes ServiceAccount
          serviceAccountRef:
            name: "eso-sa"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: eso-rb
  namespace: tenant4a
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
  - name: eso-sa
    namespace: tenant4a
    kind: ServiceAccount
  {{- end }}
---
{{- end }}